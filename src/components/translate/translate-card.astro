---
interface Props {
    title: string;
    idParrafo: string;
}

import IconSound from "../icons/icon-sound.astro";
import IconCancelSound from "../icons/icon-cancel-sound.astro";

const { title, idParrafo } = Astro.props;
---

<div class="flex flex-col relative w-[100%] lg:w-1/3 px-7 pt-2 items-center">
    <h4
        class="bg-[#1A5F70] text-[#EDFEFE] text-center c-subTitle-text font-medium text-base
        z-30 w-3/4 md:min-w-[160px]
        rounded-xl c-drop-shadow-10px
        p-2"
        id="title"
    >
        {title}
    </h4>

    <article
        class="flex justify-center items-center relative
        c-bg-gradient-trans c-drop-shadow-7px rounded-xl
        text-black c-normal-text text-center
        w-full min-h-[33vh]
        px-6 pt-5 -top-3"
    >
        <p
            class="text-center text-[#EDFEFE] text-lg md:text-2xl c-placeholder-text font-bold p-1 drop-shadow-2xl c-drop-shadow-25px mb-4"
            id={idParrafo}
            style="font-size: 1.5rem;"
        >
        </p>
        <button
            aria-label="reproducir sonido"
            class="absolute bottom-1 right-1 z-50 p-0 m-0 cursor-pointer hover:animate-pulse"
            id={"s-" + idParrafo}
        >
            <IconCancelSound id="cancel" color="#1a5f70" size="48px" />
            <IconSound ids="play" color="#aaf3f7" size="48px" />
        </button>
    </article>
</div>

<script>
    import { generateSpeech } from "../../utils/textToSpeech";

    document
        .querySelectorAll(
            "#s-englishParagraph, #s-franchiseParagraph, #s-germanParagraph",
        )
        .forEach((boton) => {
            boton.addEventListener("click", async (e) => {
                // Añadido 'async' aquí
                e.preventDefault();
                let texto = document.getElementById(
                    boton.id.replace("s-", ""),
                )?.textContent;

                console.log(texto);

                if (boton.id.replace("s-", "") === "germanParagraph") {
                    let traduccion = document
                        .getElementById(boton.id.replace("s-", ""))
                        ?.querySelector(".traduccion")?.textContent;

                    let articulo = document
                        .getElementById(boton.id.replace("s-", ""))
                        ?.querySelector(".articulo")?.textContent;

                    let descripcion = document
                        .getElementById(boton.id.replace("s-", ""))
                        ?.querySelector(".descripcion")?.textContent;
                    texto = `${articulo} ${traduccion} . ${descripcion}`;
                }

                if (texto?.includes("Articulo:")) {
                    texto = texto.replace("Articulo:", "");
                }

                try {
                    const audioUrl = await generateSpeech(texto, {
                        speed: 0.75,
                        similarity: 0.75,
                        voiceId: "zrHiDhphv9ZnVXBqCLjz",
                        saveToLocalStorage:false
                    });

                    if (audioUrl) {
                        const audio = new Audio(audioUrl);
                        await audio.play();
                    }
                } catch (err) {
                    console.error(err);
                }
            });
        });
</script>
